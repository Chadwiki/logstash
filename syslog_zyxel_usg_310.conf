# Syslog Kickpass2
# Data_source Syslog - UDP/TCP
# Tested on LS 6.1.0
# version 0.0.2
# updated 2018.01.17
#  .\bin\logstash -r -f .\conf\logstash_syslog.conf --path.data C:\Elasticsearch\logstash-6.0.0\data\syslog
# TODO: identify syslog types for conditionals, add break on input type
# TODO: Test non_geopip- (^0\.0\.0\.0)|(^127\.0\.0\.1)|(^192\.168)|(^10\.)|(^172\.1[6-9])|(^172\.2[0-9])|(^172\.3[0-1])


input {
  tcp { port => 514 type => syslog id => "input_tcp_514" tags => [ "tcp", "input" ] }
  udp { port => 514 type => syslog id => "inpute_udp_514" tags => [ "udp", "input" ] }
}
filter {
  if [type] == "syslog" {
    grok {
      id => "filter_grok"
      break_on_match => "true"
      match => { "message" => [
      "(?:<%{POSINT:syslog_pri}>)?(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:syslog_timestamp})%{SPACE}%{SYSLOGHOST:syslog_hostname}%{SPACE}(CEF:%{WORD:cef_version}\|)(%{WORD:device_vendor}\|)(%{WORD:device_product}\|)(%{DATA:device_version}\|)(%{DATA:signatureid}\|)(%{DATA:name}\|)(%{DATA:severity}\|)%{GREEDYDATA:extension}",
      "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:syslog_hostname}%{SPACE}%{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?:%{SPACE}(?<sudo_environment>(.*)):%{SPACE}%{GREEDYDATA:syslog_message0}",
      "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:syslog_hostname}%{SPACE}%{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?:%{SPACE}\((?<username>(.*))\)%{SPACE}CMD%{SPACE}\((?<cmdline>(.*))\)%{GREEDYDATA:syslog_message1}",
      "%{GREEDYDATA:syslog_message}"
      ]}
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{syslog_hostname}" ]
      add_tag => "grok"
    }
    syslog_pri { id => "filter_syslog_pri" }
    date {
      id => "filter_date"
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    kv { id => "filter_syslog_kv"
      source => "extension"
      field_split => " "
      value_split => "="
      target => "cef"
      #include_keys => [ "src" , "dest"]
    }
    #if [cef.src] =~ /^10\./ {
    #  geoip { source => "[cef][src]" target => "geo_src" }
    #}
    #if [cef.dst] =~ /^10\./ {
    #  geoip { source => "[cef][dst]" target => "geo_dst" }
    #}
  }
}
output {
  if [type] == "syslog" {
  elasticsearch {
    id => "output_elasticseasrch_0"
    hosts => "localhost"
    manage_template => false
    index => "logstash-syslog-%{+YYYY.MM}-1"
    document_type => "doc"
    user => "logstash_user"
    password => "%{logstash_password}"
    }
  }
  stdout { codec => rubydebug }
}
