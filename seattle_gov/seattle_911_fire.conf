# LS 5.4.0
# "name" : "Seattle Real Time Fire 911 Calls"
# Data Source - https://data.seattle.gov/api/views/kzjm-xkqj/rows.csv?accessType=DOWNLOAD
# From - https://data.seattle.gov/browse?category=Public+Safety
# Version - 

input {
      file {
          id => "1_input_file_csv" 
          path => "/Users/chadwiki/Downloads/Seattle_Real_Time_Fire_911_Calls.csv"
		      ## path => "D:\ElasticSearch\external_data\Seattle_Real_Time_Fire_911_Calls.csv"
          sincedb_path => "/Users/chadwiki/.sincedb_seattle_911_fire"
          type => "fire"
          start_position => "beginning"
		      #"workers" => "4"
          #ignore_older => "999999999"
      }
}
filter {  
    csv {
        id => "1_filter_csv"
        # ~change Incident_Location to Report_location
        columns => [ "Address" , "Event_Clearance_Group" , "Datetime" , "Latitude" , "Longitude" , "Incident_Location" , "Incident_Number"]
        separator => ","
    }
  if [Address] == "Address" {
      drop { id => "2_filter_drop_header"}
    } 
  if [Event_Clearance_Group] == " --T::00" {
      drop { id => "2_filter_drop_mal" }
  }
  else {
      date {
        # 01/27/2015 01:02:00 PM
        id => "3_filter_date"
        # FIX for other date pattern -  
        #10/24/2011 07:49:00 AM +0000 - MM/dd/yyyy HH:mm:ss aa Z
        #2011-11-04T24:44:00+0000 - "yyyy-MM-dd'T'HH:mm:ssZ"
        #2017-06-27T18:32:19.646Z - "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
        # Found leading space on timefield
        match => [ "Datetime" , "MM/dd/yyyy HH:mm:ss aa Z", " yyyy-MM-dd'T'HH:mm:ssZ", "yyyy-MM-dd'T'HH:mm:ssZ", 
        "yyyy-MM-dd'T'HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSSZ", "ISO8601" ]
        target => "@timestamp"
        #timezone => "America/Los_Angeles"
        tag_on_failure => ["_dateparsefailure"]
        #tag_on_failure => ["%{id}_failure"]
    }
    mutate {
        id => "4_filter_mutate"
        convert => { 
          "Address" => "string"
          "Event_Clearance_Group" => "string"
          "Datetime" => "string"
          "Longitude" => "float"
          "Latitude" =>"float"
          "Incident_Location" => "string"
    }
  }
    mutate {
      id => "5_filter_geo"
      # FIX add logic for nil field
      rename => {
        "Latitude" => "[location][lat]" 
        "Longitude" => "[location][lon]" 
      }
      #tag_on_failure => ["parsefailure"]
    }
    mutate {
      #remove uneeded data
      id => "6_filter_mutate_drop_msgfield"
      #remove_field => "message"
      remove_field => [ "path", "message"]
    }
  }
}

output {
  stdout {
    id => "0_output_stdout"
    codec => rubydebug
  }
  if [type] == "fire" and "_dateparsefailure" in [tags] or "parsefailure" in [tags]{
    file { path => "/Users/chadwiki/Downloads/failed_events_%{type}-%{+YYYY-MM-dd}" }
  }
  else  {
    elasticsearch {
      id => "1_output_elasticsearch"
      hosts => "localhost"
	    #hosts => "192.168.0.155"
	    index => "seattle_911_fire"
      user => "elastic"
      password => "changeme"
      document_type => "%{type}"
      #for Doc_id Incident_number does not always exist
      #document_id => "%{Incident_Number}"
      # template => path
      # template_name => seattle_911
      # template_overwrite => true
    }
  }
}
