input { 
	file {
	  type => "IISLogs"
	  path => "D:/inetpub/logs/LogFiles/W3SVC1/*.log"
	}
}

filter { 
  #ignore log comments
  if [message] =~ "^#" {
    drop {}
  }
  
  #IIS All Fields: date time s-sitename s-computername s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs-version cs(User-Agent) cs(Cookie) cs(Referer) cs-host sc-status sc-substatus sc-win32-status sc-bytes cs-bytes time-taken
  grok {
    match => ["message","%{TIMESTAMP_ISO8601:log_timestamp} %{WORD:s_sitename} %{IPORHOST:s_computername} %{IP:s_ip} %{WORD:cs_method} %{URIPATH:cs_uri_stem} %{NOTSPACE:cs_uri_query} %{NUMBER:s_port} %{NOTSPACE:cs_username} %{IPORHOST:c_ip} %{NOTSPACE:cs_version} %{NOTSPACE:cs_useragent} %{NOTSPACE:cs_cookie} %{NOTSPACE:cs_referer} %{IPORHOST:cs_host} %{NUMBER:sc_status} %{NUMBER:sc_substatus} %{NUMBER:sc_win32_status} %{NUMBER:sc_bytes:int} %{NUMBER:cs_bytes:int} %{NUMBER:timetaken:int}"]
  }
 
  #Set the Event Timesteamp from the log
	date {
      match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss" ]
	  timezone => "America/Los_Angeles"
    }	
  #remove the 	
	mutate {
      remove_field => [ "log_timestamp"]
    }
}

output {
  elasticsearch {
	index => "logstash-iis-%{+YYYY.MM.dd}"
    bind_host => "{server_ip}"
	bind_port => 9200
	host => "{hostname}"
	protocol => http
	idle_flush_time => 1
	flush_size => 5000
  }
}