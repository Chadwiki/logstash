input {
  tcp {
    port => 514
    type => windows
    codec => json_lines {}
  }
  udp {
    port => 514
    type => windows
    codec => json_lines {}
  }
}

filter{
  if [type] == "windows" { 
                      date { 
                        match => [ "EventTime", "yyyy-MM-dd HH:mm:ss" , "ISO8601"]
                        "timezone" => "America/Los_Angeles"
                        } 
    }
	mutate {
      # Remove redundant fields
      remove_field => [ "SourceModuleType", "EventTimeWritten", "EventType" ]
      add_tag => ["Windows", "Application", "Security" , "nxlog"]
      convert => { "Keywords" => "string"}
      lowercase => ["Hostname", "Channel"]
    }
}

output {
  if [type] == "windows" and "_grokparsefailure" in [tags] {
    file { path => "/var/log/failed_windows_events-%{+YYYY-MM-dd}" }
  }
  elasticsearch { 
  		protocol => "http"
        bind_host => "127.0.0.1"
        bind_port => 9333
        host => "5beca22b3eed84864b213f60ee908351.us-east-1.aws.found.io"
        port => "9243"
        ssl=> true
        user => "readwrite"
        password =>"fnevo5qtlpmokn1fka"
  		index => "ls-win-events-%{+YYYY.MM.DD}"
        document_type => "win-evnt-%{Channel}"
  		idle_flush_time => 1
        flush_size => 100
        embedded => false
  		}
  stdout { codec => rubydebug }
}

